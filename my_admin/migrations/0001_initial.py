# Generated by Django 2.0.6 on 2018-06-12 05:59

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Member',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('member_id', models.AutoField(db_column='member_id', primary_key=True, serialize=False, verbose_name='用户ID')),
                ('member_name', models.CharField(db_column='member_name', max_length=255)),
                ('telephone', models.CharField(db_column='telephone', max_length=255, unique=True)),
                ('status', models.CharField(db_column='status', default='normal', max_length=255)),
                ('role', models.CharField(db_column='role', max_length=255, null=True)),
                ('sessions', models.CharField(db_column='sessions', max_length=255)),
                ('created_ip', models.CharField(db_column='created_ip', max_length=255, null=True)),
                ('create_time', models.IntegerField(db_column='create_time')),
                ('update_time', models.IntegerField(db_column='update_time')),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'app_member',
                'permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Brands',
            fields=[
                ('brand_id', models.AutoField(db_column='brand_id', primary_key=True, serialize=False, verbose_name='品牌ID')),
                ('cn_name', models.CharField(db_column='cn_name', max_length=255, verbose_name='品牌中文名')),
                ('cn_name_abridge', models.CharField(db_column='cn_name_abridge', max_length=255, null=True, verbose_name='品牌中文名缩写')),
                ('en_name', models.CharField(db_column='en_name', max_length=255, null=True, verbose_name='品牌英文名')),
                ('form_country', models.CharField(db_column='form_country', max_length=255, null=True, verbose_name='所属国家')),
                ('key_word', models.CharField(db_column='key_word', max_length=255, null=True, verbose_name='搜索关键字')),
                ('brand_about', models.CharField(db_column='brand_about', max_length=255, null=True, verbose_name='品牌简介')),
                ('brand_image', models.CharField(db_column='brand_image', max_length=255, null=True, verbose_name='品牌图片路径')),
            ],
            options={
                'db_table': 'app_brands',
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('categorie_id', models.AutoField(db_column='categorie_id', primary_key=True, serialize=False, verbose_name='分类ID')),
                ('categorie_name', models.CharField(db_column='categorie_name', max_length=255, verbose_name='分类名')),
                ('categorie_type', models.SmallIntegerField(choices=[(0, '功效专区'), (1, '基础护理'), (2, '个性彩妆'), (3, '营养保健')], db_column='categorie_type', null=True, verbose_name='类别')),
                ('image_path', models.CharField(db_column='image_path', max_length=255, null=True, verbose_name='缩略图路径')),
            ],
            options={
                'db_table': 'app_categories',
            },
        ),
        migrations.CreateModel(
            name='CommentImages',
            fields=[
                ('image_id', models.AutoField(db_column='image_id', primary_key=True, serialize=False, verbose_name='图片ID')),
                ('comment_id', models.BigIntegerField(db_column='comment_id', verbose_name='所属评论ID')),
                ('image_path', models.CharField(db_column='image_path', max_length=255, verbose_name='路径')),
                ('file_size', models.CharField(db_column='file_size', max_length=255, verbose_name='文件大小')),
                ('resolution', models.CharField(db_column='resolution', max_length=255, verbose_name='分辨率')),
                ('file_type', models.CharField(db_column='file_type', default='.jpg', max_length=255, verbose_name='文件类型')),
                ('status', models.CharField(db_column='status', default='normal', max_length=255, verbose_name='状态')),
            ],
            options={
                'db_table': 'app_comment_images',
            },
        ),
        migrations.CreateModel(
            name='ItemComments',
            fields=[
                ('comment_id', models.AutoField(db_column='comment_id', primary_key=True, serialize=False, verbose_name='评论ID')),
                ('member_id', models.BigIntegerField(db_column='member_id', verbose_name='评论用户ID')),
                ('item_id', models.BigIntegerField(db_column='item_id', verbose_name='所属商品ID')),
                ('comment_content', models.CharField(db_column='comment_content', max_length=255, verbose_name='评论内容')),
                ('create_time', models.IntegerField(db_column='create_time', verbose_name='创建时间')),
                ('status', models.CharField(db_column='status', default='normal', max_length=255, verbose_name='状态')),
            ],
            options={
                'db_table': 'app_item_comments',
            },
        ),
        migrations.CreateModel(
            name='ItemImages',
            fields=[
                ('image_id', models.AutoField(db_column='image_id', primary_key=True, serialize=False, verbose_name='图片ID')),
                ('item_id', models.BigIntegerField(db_column='item_id', verbose_name='所属商品ID')),
                ('image_type', models.IntegerField(choices=[(0, 'title'), (1, 'thumbicon'), (2, 'item_title'), (4, 'item')], db_column='image_type', verbose_name='图片类型')),
                ('image_path', models.CharField(db_column='image_path', max_length=255, verbose_name='路径')),
                ('file_size', models.CharField(db_column='file_size', max_length=255, verbose_name='文件大小')),
                ('resolution', models.CharField(db_column='resolution', max_length=255, verbose_name='分辨率')),
                ('file_type', models.CharField(db_column='file_type', max_length=255, verbose_name='文件类型')),
                ('status', models.CharField(db_column='status', max_length=255, verbose_name='状态')),
            ],
            options={
                'db_table': 'app_item_images',
            },
        ),
        migrations.CreateModel(
            name='Items',
            fields=[
                ('item_id', models.AutoField(db_column='item_id', primary_key=True, serialize=False, verbose_name='商品ID')),
                ('item_name', models.CharField(db_column='item_name', max_length=255, verbose_name='商品名称')),
                ('item_info', models.CharField(db_column='item_info', max_length=255, null=True, verbose_name='商品信息')),
                ('item_code', models.CharField(db_column='item_code', max_length=255, null=True, verbose_name='商品编码')),
                ('item_barcode', models.CharField(db_column='item_barcode', max_length=255, null=True, verbose_name='商品条码')),
                ('price', models.FloatField(db_column='price', null=True, verbose_name='商品原价')),
                ('current_price', models.FloatField(db_column='current_price', null=True, verbose_name='商品现价')),
                ('foreign_price', models.FloatField(db_column='foreign_price', null=True, verbose_name='国外价格')),
                ('comment_count', models.IntegerField(db_column='comment_count', null=True, verbose_name='评论数量')),
                ('hot_value', models.IntegerField(db_column='hot_value', null=True, verbose_name='热度值')),
                ('buy_count', models.IntegerField(db_column='buy_count', null=True, verbose_name='被购买次数')),
                ('key_word', models.CharField(db_column='key_word', max_length=255, null=True, verbose_name='搜索关键字')),
                ('origin', models.CharField(db_column='origin', max_length=255, null=True, verbose_name='生产地')),
                ('shelf_life', models.CharField(db_column='shelf_life', max_length=255, null=True, verbose_name='保质期')),
                ('capacity', models.CharField(db_column='capacity', max_length=255, null=True, verbose_name='容量')),
                ('specifications_type_id', models.SmallIntegerField(choices=[(0, '瓶'), (1, '包'), (2, '套'), (3, '片'), (4, '支'), (5, '袋'), (6, '对'), (7, '盒')], db_column='specifications_type_id', null=True, verbose_name='规格类型')),
                ('categories_id', models.BigIntegerField(db_column='categories_id', null=True, verbose_name='分类ID')),
                ('brand_id', models.BigIntegerField(db_column='brand_id', null=True, verbose_name='品牌ID')),
                ('for_people', models.CharField(db_column='for_people', max_length=255, null=True, verbose_name='适用人群')),
                ('weight', models.CharField(db_column='weight', max_length=255, null=True, verbose_name='重量')),
                ('create_person', models.CharField(db_column='create_person', max_length=255, verbose_name='创建人')),
                ('create_time', models.IntegerField(db_column='create_time', verbose_name='创建时间')),
                ('update_person', models.CharField(db_column='update_person', max_length=255, null=True, verbose_name='更新人')),
                ('update_time', models.IntegerField(db_column='update_time', verbose_name='更新时间')),
                ('status', models.CharField(db_column='status', default='normal', max_length=255, verbose_name='状态')),
            ],
            options={
                'db_table': 'app_items',
            },
        ),
        migrations.CreateModel(
            name='ItemTags',
            fields=[
                ('tag_id', models.AutoField(db_column='tag_id', primary_key=True, serialize=False, verbose_name='标签ID')),
                ('tag_name', models.CharField(db_column='tag_name', max_length=255, verbose_name='标签名')),
                ('item_id', models.BigIntegerField(db_column='item_id', verbose_name='所属商品ID')),
            ],
            options={
                'db_table': 'app_item_tags',
            },
        ),
    ]
